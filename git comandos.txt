#comandos básicos de git

1- git init  ... inicia um repositorio vazio

2-git clone ... clona um repositorio da nuvem na maquina

3-git add ...adiciona as mudanças do codigo ao versionamento

4-git status...mostra o estado dos arquios que foram modificados

5-git commit -m...faz o commit e inlcui a descreição do commit

6-git remote add +url do repositorio...define o endereço online do pra onde os arquivos vão

7-git remote  --set upstream main...define qual a branch para onde os arquivos irão

8-git reflog...mostra o histórico de alterações dos códigos(copiar o  da versão desejada e copiar e usar git reset --hard e colar o id) irá restaurar a versão selecionada

#Branches :

branches são como "galhos" ou ramos, neste caso é a ramificação do codigo, por padrão a branch do git hub recebe o nome de main,´útil em caso de um trabalho em equipe, cada um usa sua própria branch e depois podem colocar as funcionalidades para a branch principal através do "merge"

1- git branch... mostras as branchs disponiveis no momento

2-git branch "nome da branch"...criar nova branch

a branch marcada em verde significa que é a que está sendo usada no momento

3- git checkout "nome da branch"...muda para a branch que voce selecionou

#é importante lembrar de usar o comando (git push --set upstream "branch nova" para que a branche seja usada no servidor remoto)



#Merge :

merge vai unir os codigos das branches, deixar a branch principal atualizada

- entrar a branch principal ( git branch "branch principal" "git checkout + branche principa")

- dar um (git merge + nome da branch de onde virá as atualizações)

  1- git merge...vai unir os codigos da branch que voce quer pegar os códigos atualizados

Antes de entrar na branch principal e fazer o merge é importante fazero pull (pushar as atualizações do servidor)

 1-git pull...vsi trazer as atualizações do servidor para a maquina local
git pull da branch principal, gerar nova branch a partir  da branch principal,trabalhar e adicionar novas funcionalidades na nova branch, finalizar o tabalho nessa branch, mergiar,e fazer um git push da branch principal

sempre mudar para a branch principal e dar um pull antes de fazer o merge
o merge é feito com "git merge + branch atualizada", e a branch principa será atualizada

-pull request : pull requeste é uma requisição para mergiar seu código a branch principal
deve-se fazer o pull e especificar as mudanças em um campo onde voce vai descrever as atualizações feitas, sua requisição sera validada ou não

Gt ignore :
o git ignore vai ignorar arquivos que voce nao quer no controle de versão atraves do comando ( touch ,gitignore) ira gerar um arquivo de texto onde voce ira especificar quais arquivos não devem ir para o controle de versão ( arquivo/ctrl+s) para pastas

resumo

-- O git é uma ferramenta de versionamento de código na maquina local, ao coontrário do que se pensa git e github são diferentes, porém são ferramentas complementares, fiz estas anotações a partir do curso da dio e do canal "Dev aprender no youtube"
